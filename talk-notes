Terminal multiplexer I
	That means closing the terminal, or the connection, doesn't lose your
	session (demo)
	Useful: Have you ever closed a terminal tab when you thought you were closing a
	browser tab?
Terminal mulltiplexer II
	any long-running process whose output is useful can be run in a tmux session
	and sit there until you need it.
	useful: so you can keep an eye on it but it's otherwise out of the way
Terminal window manager I
	Session, window, pane
	differs from screen here, and I think less confusing.
	list-sessions
	list-windows
	list-panes
	find-window multiplexer
	find-window window manager
	pane layouts
	select panes and move them
	multiple clients can connect over the network
	useful for running tests alongside your editor, or looking at several servers
Terminal window manager II
	Scripts can provide the content, explain each
	You can hook into bells in terminals (demonstrate)
	so you can be notified when things happen in other terminal processes
	useful for timed events and things that use the terminal bell
Commands I
	:kill-pane -t 2
	C-a x
	run tmux kill-pane -t 4
	That means you can send a command by console
	means you can script tmux commands
Commands II
	Since source-file is a command, you can bind keys to make sourcing files easier
	This presentation was sourced.
	Useful for setting up frequently used projects
Commands III, Control of console
	Go to ~/Projects/Hemingway/Repository and open readme.
	note-taking
	urlview
Features
	synchronized panes
		(discuss) servers session
		(discuss) REPL/editor sync
		(discuss) host-agnostic Clipboard
			e.g. pasting public key in multiple servers
	Input helpers (pass input to any command)
		These can be used in bindings
		(demo) C-a / git-log
		(demo) C-a ! cowsay moo
		(demo) source repl
Putting it all together
		run tmux commands
		write a script that runs tmux commands
		bind a key to run a script to run tmux commands
		bind a key to take input, to pass into a script that runs tmux commands
		At which point neat stuff emerges: 
Open or create pane for SBT project
'REPL/editor/logs for this project'
SSH and server groups
	'ssh sessions to all servers in group'
diff config files on different servers
	ssh into harv6 and harv8, and diff /etc/streaming/base/akka.conf
More info
	email to dev@

# vi: set ft=vo
